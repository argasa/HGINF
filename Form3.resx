<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>