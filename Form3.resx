<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADMAAAAzCAIAAAC1w6d9AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAATxJREFUWEft10EKwjAQheFcwbV7r2tv0N60PhkoybSYefOqVEj4FzWB8IWaRcvt
        /rhmb9laygUbMr4h4xsyviHj+2vZsqwYz6efTzdN7w3n2c+3BWTb6O0Vys5pwy21BWR2RBsirmZhW7fa
        Fvuf1TumcfUmeHaru8I3QMSRLBSWoTSOZyFGhhK4FAuRMkThsizEy1AQJ7BQSoa6OI2FsjL0ASezkCBD
        h7gzWEiTIYdD2xBYSJahGrcNjYXOkCGHk1noO7LD20r2tbcp4069AXiuf2o4TeZY+0kBJ8gOWfulLC4r
        +8CyZFxK1mVZGo6XBVmWgCNlFMvK4hhZgmWlcGFZmmXxuJhMZFkkLiCrv4TTLKvGnfAlvA2RZdU4t9QW
        kNlevSMS2UvonTN8A37ekPENGd+Q8Q0Z31VlpbwAt+uvtuvAlYcAAAAASUVORK5CYII=
</value>
  </data>
</root>